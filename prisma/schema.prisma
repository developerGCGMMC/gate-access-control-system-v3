generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "multiSchema"]
}

datasource db {
  provider = "postgresql"
  // url      = env("DATABASE_URL")
  url      = "postgresql://postgres:postgres@localhost:54322/postgres?connect_timeout=300"
  schemas  = ["public"]
}

// ! ---------------------------------------------------------------------------------------------------

model Employees {
  id                     String       @id @default(dbgenerated("gen_random_uuid()")) @map("id") @db.Uuid
  employeeID             String?      @map("employee_id")
  biometricsNo           String?      @map("biometrics_no")
  employment             String?      @map("employment")
  lastName               String       @map("last_name")
  firstName              String       @map("first_name")
  middleName             String?      @map("middle_name")
  genealogySuffix        String?      @map("genealogy_suffix")
  activeStatus           ActiveStatus @default(active) @map("active_status")
  qrCode                 String?      @default(dbgenerated("gen_random_uuid()")) @map("qr_code") @db.Uuid
  qrCodeActiveStatus     ActiveStatus @default(active) @map("qr_code_active_status")
  barCode                String?      @default(dbgenerated("gen_random_uuid()")) @map("bar_code") @db.Uuid
  barCodeActiveStatus    ActiveStatus @default(active) @map("bar_code_active_status")
  rfidHFUID              String?      @map("rfid_hf_uid")
  rfidHFUIDActiveStatus  ActiveStatus @default(active) @map("rfid_hf_uid_active_status")
  rfidHFTag              String?      @map("rfid_hf_tag")
  rfidHFTagActiveStatus  ActiveStatus @default(active) @map("rfid_hf_tag_active_status")
  rfidUHFEPC             String?      @map("rfid_uhf_epc")
  rfidUHFEPCActiveStatus ActiveStatus @default(active) @map("rfid_uhf_epc_active_status")
  serviceName            String?      @map("service_name")
  dateAppointment        String?      @map("date_appointment")
  dateAppointmentExpiry  String?      @map("date_appointment_expiry")
  createdAt              DateTime     @default(now()) @map("created_at")
  updatedAt              DateTime     @default(now()) @updatedAt @map("updated_at")

  timeLogs TimeLogs[] @relation("employees-time_logs")

  @@map("employees")
  @@schema("public")
}

model Trainees {
  id                     String       @id @default(dbgenerated("gen_random_uuid()")) @map("id") @db.Uuid
  traineeID              String?      @map("trainee_id")
  designation            String?      @map("designation")
  lastName               String       @map("last_name")
  firstName              String       @map("first_name")
  middleName             String?      @map("middle_name")
  genealogySuffix        String?      @map("genealogy_suffix")
  activeStatus           ActiveStatus @default(active) @map("active_status")
  qrCode                 String?      @default(dbgenerated("gen_random_uuid()")) @map("qr_code") @db.Uuid
  qrCodeActiveStatus     ActiveStatus @default(active) @map("qr_code_active_status")
  barCode                String?      @default(dbgenerated("gen_random_uuid()")) @map("bar_code") @db.Uuid
  barCodeActiveStatus    ActiveStatus @default(active) @map("bar_code_active_status")
  rfidHFUID              String?      @map("rfid_hf_uid")
  rfidHFUIDActiveStatus  ActiveStatus @default(active) @map("rfid_hf_uid_active_status")
  rfidHFTag              String?      @map("rfid_hf_tag")
  rfidHFTagActiveStatus  ActiveStatus @default(active) @map("rfid_hf_tag_active_status")
  rfidUHFEPC             String?      @map("rfid_uhf_epc")
  rfidUHFEPCActiveStatus ActiveStatus @default(active) @map("rfid_uhf_epc_active_status")
  organization           String?      @map("organization")
  rotationStart          String?      @map("rotation_start")
  rotationEnd            String?      @map("rotation_end")
  registeredAt           String?      @map("registered_at")
  createdAt              DateTime     @default(now()) @map("created_at")
  updatedAt              DateTime     @default(now()) @updatedAt @map("updated_at")

  timeLogs TimeLogs[] @relation("trainees-time_logs")

  @@map("trainees")
  @@schema("public")
}

model RemoteWorkers {
  id                     String       @id @default(dbgenerated("gen_random_uuid()")) @map("id") @db.Uuid
  remoteWorkerID         String?      @map("remote_worker_id")
  designation            String?      @map("designation")
  lastName               String       @map("last_name")
  firstName              String       @map("first_name")
  middleName             String?      @map("middle_name")
  genealogySuffix        String?      @map("genealogy_suffix")
  activeStatus           ActiveStatus @default(active) @map("active_status")
  qrCode                 String?      @default(dbgenerated("gen_random_uuid()")) @map("qr_code") @db.Uuid
  qrCodeActiveStatus     ActiveStatus @default(active) @map("qr_code_active_status")
  barCode                String?      @default(dbgenerated("gen_random_uuid()")) @map("bar_code") @db.Uuid
  barCodeActiveStatus    ActiveStatus @default(active) @map("bar_code_active_status")
  rfidHFUID              String?      @map("rfid_hf_uid")
  rfidHFUIDActiveStatus  ActiveStatus @default(active) @map("rfid_hf_uid_active_status")
  rfidHFTag              String?      @map("rfid_hf_tag")
  rfidHFTagActiveStatus  ActiveStatus @default(active) @map("rfid_hf_tag_active_status")
  rfidUHFEPC             String?      @map("rfid_uhf_epc")
  rfidUHFEPCActiveStatus ActiveStatus @default(active) @map("rfid_uhf_epc_active_status")
  organization           String?      @map("organization")
  createdAt              DateTime     @default(now()) @map("created_at")
  updatedAt              DateTime     @default(now()) @updatedAt @map("updated_at")

  timeLogs TimeLogs[] @relation("remote_workers-time_logs")

  @@map("remote_workers")
  @@schema("public")
}

// ! ---------------------------------------------------------------------------------------------------

model TimeLogs {
  id              String     @id @default(dbgenerated("gen_random_uuid()")) @map("id") @db.Uuid
  userType        UserType   @default(employee) @map("user_type")
  employeesID     String?    @map("employees_id") @db.Uuid
  traineesID      String?    @map("trainees_id") @db.Uuid
  remoteWorkersID String?    @map("remote_workers_id") @db.Uuid
  accessType      AccessType @default(qr_code) @map("access_type")
  timeLog         String?    @map("time_log")
  movement        Movement   @default(in) @map("movement")
  location        Location   @default(main_gate) @map("location")
  createdAt       DateTime   @default(now()) @map("created_at")

  employee     Employees?     @relation("employees-time_logs", fields: [employeesID], references: [id])
  trainee      Trainees?      @relation("trainees-time_logs", fields: [traineesID], references: [id])
  remoteWorker RemoteWorkers? @relation("remote_workers-time_logs", fields: [remoteWorkersID], references: [id])

  @@map("time_logs")
  @@schema("public")
}

enum UserType {
  employee
  trainee
  remote_worker
  watcher
  visitor

  @@schema("public")
}

enum AccessType {
  qr_code
  bar_code
  rfid_hf_uid
  rfid_hf_tag
  rfid_uhf_epc

  @@schema("public")
}

enum Movement {
  in
  out

  @@schema("public")
}

enum Location {
  main_gate
  opd_gate
  back_gate

  @@schema("public")
}

enum ActiveStatus {
  active
  inactive

  @@schema("public")
}
